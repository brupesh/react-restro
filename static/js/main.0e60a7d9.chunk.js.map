{"version":3,"sources":["http-common.js","components/restaurant.js","components/login.js","components/logout.js","components/otp-verification.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","process","headers","restaurant","props","token","localStorage","getItem","state","isLoggedIn","renderRestaurant","bind","renderItems","changeRestaurent","fetchItems","fetchRestaurant","this","setState","selected","config","API","get","then","res","console","log","data","id","catch","error","response","status","e","target","split","items","map","item","index","className","key","name","restaurants","onClick","to","Component","login","onChange","submitForm","ref_token","params","post","setItem","token_type","access_token","refresh_token","mobile","value","Number","length","preventDefault","email","password","success","user","otpLogin","pathname","class","type","data-dismiss","errorMsg","onSubmit","placeholder","logout","removeItem","otpVerification","location","otp","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0e60a7d9.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  headers: {\n    \"Content-type\": \"application/json\",\n    \"Access-Control-Allow-Origin\":\"*\"\n  }\n});","import React, { Component } from 'react'\nimport {Redirect, Link} from \"react-router-dom\"\nimport API from \"../http-common.js\"\nimport \"./restaurant.css\";\n\nexport default class restaurant extends Component {\n\n  constructor(props){\n      super(props);\n\n      let isLoggedIn = true;\n      let token = localStorage.getItem(\"token\");\n      this.state = {\n          \"restaurants\": [],\n          \"selected\": 1,\n          \"items\": [],\n          \"error\":false,\n          \"errorMsg\":\"\",\n          isLoggedIn,\n          token\n      }\n\n      this.renderRestaurant = this.renderRestaurant.bind(this);\n      this.renderItems = this.renderItems.bind(this);\n      this.changeRestaurent = this.changeRestaurent.bind(this);\n      this.fetchItems = this.fetchItems.bind(this);\n      this.fetchRestaurant = this.fetchRestaurant.bind(this);\n      // this.refreshToken = this.refreshToken.bind(this);\n      // this.submitForm = this.submitForm.bind(this);\n  }\n\n  componentDidMount(){\n     \n      if(this.state.token != null){\n          this.setState({\n              \"isLoggedIn\":true\n          })\n      }else{\n          this.setState({\n            \"isLoggedIn\":false\n        })\n      }\n    \n      this.fetchRestaurant(this.state.selected);\n      this.fetchItems(this.state.selected);\n\n  }\n\n  fetchRestaurant(){\n    let config = {\n      headers: {\n          'Accept': 'application/json',\n          \"Authorization\": this.state.token\n      }\n    }\n    API.get('api/restaurant',config).then(res => {\n      console.log(res.data);\n      this.setState({\n          \"restaurants\":res.data,\n          \"selected\": res.data[0].id,\n      })\n    }).catch(error => {\n        if(error.response.status == 401){\n          // this.refreshToken()\n          this.setState({\n            isLoggedIn:false\n          })            \n        }\n    });\n  }\n\n  fetchItems(id){\n    let config = {\n      headers: {\n          'Accept': 'application/json',\n          \"Authorization\": this.state.token\n      }\n    }\n    API.get('api/restaurant/items/'+id,config).then(res => {\n      console.log(res.data);\n      this.setState({\n          \"items\":res.data,\n      })\n    }).catch(error => {\n      if(error.response.status == 401){\n        // this.refreshToken()\n        this.setState({\n          isLoggedIn:false\n        })            \n      }\n      this.setState({\n          \"error\":true,\n          \"errorMsg\":error.response.data.error\n      })            \n    });\n  }\n\n\n\n\n  changeRestaurent(e){\n    let id = e.target.id;\n    id = id.split(\"_\")[1];\n    this.setState({\n        \"selected\": id,\n    })\n\n    this.fetchItems(id);\n\n  }\n\n renderItems(){\n      return  (\n        <ul>\n              {this.state.items.map((item, index) => (\n                  <li className=\"list-group-item\" key={\"item_\"+item.id}>{item.name}</li>\n              ))}\n            </ul>\n    )\n  }\n\n  renderRestaurant(){\n      return  (\n        <ul>\n        {this.state.restaurants.map((restaurant, index) => (\n            <li className=\"list-group-item btn btn-default\" id={\"res_\"+restaurant.id} onClick={this.changeRestaurent} key={\"res_\"+restaurant.id}>\n              {restaurant.name}\n            </li>\n        ))}\n      </ul>\n    )\n  }\n\n  render() {\n    if(!this.state.isLoggedIn){\n      return <Redirect to=\"/\" />\n    }\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n            <Link className=\"btn btn-primary float-right\" to=\"/logout\">Logout</Link>\n            <h1 className=\"text-center text-warning\">Restaurant Page</h1>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"restaurant-list col-lg-3\">\n            <div className=\"list-group\">\n              <div className=\"card card-default\">\n                <div className=\"card-header\">Restaurant List</div>\n                <div className=\"card-body\">{this.renderRestaurant()}</div>\n              </div>             \n            </div>\n          </div>\n          <div className=\"item-list col-lg-9\">\n            <div className=\"list-group\">\n              <div className=\"card card-default\">\n                <div className=\"card-header\">Item List</div>\n                <div className=\"card-body\">{this.renderItems()}</div>\n              </div>             \n            </div>\n          </div>\n          {/* <div className=\"item-list col-lg-9 list-group\">\n          <div className=\"panel panel-default\">\n            <div className=\"panel-body\">Item List</div>\n          </div>\n            {this.renderItems()}\n          </div> */}\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport {Redirect} from \"react-router-dom\"\nimport API from \"../http-common.js\"\nimport \"./login.css\";\n\nexport default class login extends Component {\n\n    constructor(props){\n        super(props);\n\n        let isLoggedIn = false;\n        this.state = {\n            \"email\": \"\",\n            \"password\": \"\",\n            \"mobile\": \"\",\n            \"otpLogin\": false,\n            \"error\":false,\n            \"errorMsg\":\"\",\n            isLoggedIn\n        }\n\n        this.onChange = this.onChange.bind(this);\n        this.submitForm = this.submitForm.bind(this);\n    }\n\n    componentDidMount(){\n        let token = localStorage.getItem(\"token\");\n        let ref_token = localStorage.getItem(\"refresh_token\");\n        \n\n        if(ref_token != null){       \n            let params  = {\n                'grant_type' : 'refresh_token',\n                'refresh_token' : ref_token,\n                'client_id' : process.env.REACT_APP_CLIENT_ID,\n                'client_secret' : process.env.REACT_APP_CLIENT_SECRET,\n                'scope' : '',\n            }\n            API.post('/oauth/token',params,{headers:{\"Access-Control-Allow-Origin\":\"*\"}}).then(res => {\n              console.log(res.data);\n              localStorage.setItem(\"token\" , res.data.token_type+\" \"+res.data.access_token);\n                localStorage.setItem(\"refresh_token\" , res.data.refresh_token);\n                this.setState({\n                    \"isLoggedIn\":true\n                })\n                // localStorage.setItem(\"user\" , res.data.success.user);\n              \n            }).catch(error => {\n              console.log(error.response)\n                      \n            });\n        }\n        // if(token != null){\n        //     this.setState({\n        //         \"isLoggedIn\":true\n        //     })\n        // }\n        \n          \n\n        // console.log(\"ssss\",process.env.REACT_APP_CLIENT_SECRET)\n    }\n\n    onChange(e){\n        console.log(e.target.name)\n\n        if(e.target.name == \"mobile\"){\n           \n            let mobile = e.target.value;\n\n            if (mobile != \"\" && ( !Number(mobile) || mobile.length > 10 )) {\n                return;\n            }\n            this.setState({\n                [e.target.name]: mobile\n            });\n        }else{\n            this.setState({\n                [e.target.name]: e.target.value\n            })\n        }\n    }\n\n    submitForm(e){\n        e.preventDefault();\n        const {email,password,mobile} = this.state;\n\n        if(email && password){\n            console.log(\"normal\");\n            let userData = API.post('api/login', {\n                email: email,\n                password:password\n            }).then(res => {\n                localStorage.setItem(\"token\" , res.data.success.token.token_type+\" \"+res.data.success.token.access_token);\n                localStorage.setItem(\"refresh_token\" , res.data.success.token.refresh_token);\n                localStorage.setItem(\"user\" , res.data.success.user);\n\n                this.setState({\n                    \"isLoggedIn\":true\n                })\n        \n            }).catch(error => {\n                    this.setState({\n                        \"error\":true,\n                        \"errorMsg\":error.response.data.error\n                    })                \n            });\n        }else if(mobile){\n            console.log('mobile')\n            let userData = API.post('api/mobileLogin', {\n                  mobile: mobile\n              }).then(res => {\n                this.setState({\n                    \"otpLogin\":true\n                })\n                // console.log(res.data);\n              }).catch(error => {\n                this.setState({\n                    \"error\":true,\n                    \"errorMsg\":error.response.data.error\n                })                \n        });\n        }else{\n            console.log(\"Error\")\n        }\n    }\n\n\n    render() {\n        if(this.state.isLoggedIn){\n           return <Redirect to=\"/restaurant\" />\n        }\n        if(this.state.otpLogin){\n           return <Redirect to={{\n            pathname: '/otp',\n            mobile: this.state.mobile\n        }} />\n        }\n        return (\n            <div className=\"container\">\n                <div className=\"wrapper fadeInDown\">\n                <div id=\"formContent\">\n\n                    <div className=\"fadeIn first\">\n                    <h2>Login</h2>\n                    </div>\n                    {this.state.error?\n                     <div class=\"alert alert-danger alert-dismissible fade show\">\n                        <button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\n                        {this.state.errorMsg}\n                    </div>:\"\"\n                    }\n                   \n\n                    <form onSubmit={this.submitForm}>\n                        <input type=\"text\" id=\"email\" className=\"fadeIn second\" name=\"email\" value={this.state.email} onChange={this.onChange} placeholder=\"email\" />\n                        <input type=\"password\" id=\"password\" className=\"fadeIn third\" name=\"password\" value={this.state.password} onChange={this.onChange} placeholder=\"password\" />\n                        <h4 className=\"text-center\">OR</h4>\n                        <input type=\"text\" id=\"mobile\" className=\"fadeIn third\" name=\"mobile\" value={this.state.mobile} onChange={this.onChange} placeholder=\"mobile\" />\n\n                        <input type=\"submit\" className=\"fadeIn forth\" value=\"Log In\" />\n                    </form>\n\n                    {/* <div id=\"formFooter\">\n                        <a className=\"underlineHover\" href=\"#\">Forgot Password?</a>\n                    </div> */}\n\n                </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {Redirect, Link} from \"react-router-dom\"\n\nexport default class logout extends Component {\n\n    constructor(props){\n        super(props)\n    }\n\n    componentDidMount(){\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"refresh_token\");\n        localStorage.removeItem(\"user\");\n    }\n\n    render() {\n        return (\n            <div className=\"text-center\">\n                <h2>You are Logged out..</h2>\n                <Link to=\"/\">Login Back</Link>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {Redirect} from \"react-router-dom\"\nimport API from \"../http-common.js\"\nimport \"./login.css\";\n\nexport default class otpVerification extends Component {\n\n    constructor(props){\n        super(props)\n        let isLoggedIn = false;\n        this.state = {\n            \"mobile\":\"\",\n            \"otp\":\"\",\n            \"error\":false,\n            \"errorMsg\":\"\",\n            isLoggedIn\n        }\n    }\n\n    componentDidMount(){\n        console.log(this.props);\n\n        this.setState({\n            \"mobile\":this.props.location.mobile\n        })\n\n        this.onChange = this.onChange.bind(this);\n        this.submitForm = this.submitForm.bind(this);\n    }\n\n    onChange(e){\n        \n        let otp = e.target.value;\n        console.log(e.target.name)\n\n        if (otp != \"\" && ( !Number(otp) || otp.length > 4 )) {\n            return;\n        }\n        this.setState({\n            [e.target.name]: otp\n        });\n        \n    }\n\n    submitForm(e){\n        e.preventDefault();\n        const {mobile,otp} = this.state;        \n        console.log('mobile')\n        let userData = API.post('api/otpVerification', {\n                mobile: mobile,\n                otp: otp\n            }).then(res => {\n                localStorage.setItem(\"token\" , res.data.success.token.token_type+\" \"+res.data.success.token.access_token);\n                localStorage.setItem(\"refresh_token\" , res.data.success.token.token_type+\" \"+res.data.success.token.refresh_token);\n                localStorage.setItem(\"user\" , \"Bearer \"+res.data.success.user);\n                this.setState({\n                    \"isLoggedIn\":true\n                })\n            // console.log(res.data);\n            }).catch(error => {\n                this.setState({\n                    \"error\":true,\n                    \"errorMsg\":error.response.data.error\n                })                \n            });\n    \n    }\n\n    render() {\n        if(this.state.isLoggedIn){\n            return <Redirect to=\"/restaurant\" />\n         }\n        return (\n            <div>\n                <div className=\"wrapper fadeInDown\">\n                <div id=\"formContent\">\n\n                    <div className=\"fadeIn first\">\n                    <h2>Verify</h2>\n                    </div>\n                    {this.state.error?\n                     <div class=\"alert alert-danger alert-dismissible fade show\">\n                        <button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\n                        {this.state.errorMsg}\n                    </div>:\"\"\n                    }\n\n                    <form onSubmit={this.submitForm}>\n                        <input type=\"text\" id=\"otp\" className=\"fadeIn second\" name=\"otp\"  value={this.state.otp} onChange={this.onChange} placeholder=\"otp\" />\n                        <input type=\"submit\" className=\"fadeIn fifth\" value=\"Log In\" />\n                    </form>\n\n                    {/* <div id=\"formFooter\">\n                        <a class=\"underlineHover\" href=\"#\">Forgot Password?</a>\n                    </div> */}\n\n                </div>\n                </div>\n            </div>\n        )\n    }\n}\n","// import React from 'react';\n// import logo from './logo.svg';\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport restaurant from \"./components/restaurant\";\nimport login from \"./components/login\";\nimport logout from \"./components/logout\";\nimport otpVerification from \"./components/otp-verification\";\n\nclass App extends Component {\n  render() {\n    // if()\n    return (\n      \n          <div>\n      <Router>\n            <Switch>\n              {/* <Route exact path={[\"/\", \"/restaurants\"]} component={restaurantsList} /> */}\n              <Route exact path=\"/\" component={login} />\n              <Route exact path=\"/logout\" component={logout} />\n              <Route exact path=\"/otp\" component={otpVerification} />\n              <Route exact path=\"/restaurant\" component={restaurant} />\n            </Switch>\n      </Router>\n          </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}